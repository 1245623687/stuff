{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\topaz\\\\projects\\\\dropzone_multi\\\\dropzone-multi\\\\src\\\\App.js\";\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Edit \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"src/App.js\"), \" and save to reload.\"), React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Learn React\")));\n} //function MyDropZone() {\n//\tconst onDrop = useCallback(acceptedFiles => {\n//\t\t// Do something with the files\n//\t\t// \n//\t}, [])\n//\tconst {getRootProps, getInputProps, isDragActive} = useDropZone({onDrop})\n//\n//\treturn (\n//\t\t<div {...getRootProps()}>\n//\t\t  <input {...getInputProps()} />\n//\t\t  {\n//\t\t    isDragActive ?\n//\t\t\t <p>Drop the files here ..</p> :\n//\t\t\t <p>Drag 'n' drop some files here, or click to select files</p>\n//\t\t  }\n//\t\t</div>\t     \n//\t)\n//}\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/topaz/projects/dropzone_multi/dropzone-multi/src/App.js"],"names":["React","useCallback","useDropzone","useState","App","logo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBAFF,EAKE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,IAAI,EAAC,qBAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADF,CADF;AAkBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeD,GAAf","sourcesContent":["import React, {useCallback} from 'react';\nimport {useDropzone} from 'react-dropzone'\nimport { useState } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\n//function MyDropZone() {\n//\tconst onDrop = useCallback(acceptedFiles => {\n//\t\t// Do something with the files\n//\t\t// \n//\t}, [])\n//\tconst {getRootProps, getInputProps, isDragActive} = useDropZone({onDrop})\n//\n//\treturn (\n//\t\t<div {...getRootProps()}>\n//\t\t  <input {...getInputProps()} />\n//\t\t  {\n//\t\t    isDragActive ?\n//\t\t\t <p>Drop the files here ..</p> :\n//\t\t\t <p>Drag 'n' drop some files here, or click to select files</p>\n//\t\t  }\n//\t\t</div>\t     \n//\t)\n//}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}