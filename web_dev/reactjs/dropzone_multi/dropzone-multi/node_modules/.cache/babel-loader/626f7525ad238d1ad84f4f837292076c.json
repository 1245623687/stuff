{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\topaz\\\\projects\\\\dropzone_multi\\\\dropzone-multi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\topaz\\\\projects\\\\dropzone_multi\\\\dropzone-multi\\\\src\\\\App.js\";\nimport React, { useCallback } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { useDropzone } from 'react-dropzone';\nimport { useState, useEffect } from 'react';\nimport { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction DocumentTitleClickStateExample() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1]; // Similar to componentDidMount and componentDidUpdate:\n  // When you call useEffect, you're telling React to run your \"effect\" function after flushing changes to the DOM.\n\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = \"You clicked \".concat(count, \" times\");\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"You clicked \", count, \" times \"), React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Click Me\"));\n}\n\nfunction ButtonClickStateExample() {\n  // declare a new state variable, which we'll call 'count'\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"You clicked \", count, \" times\"), React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Click me\"));\n} //function DefaultAppFunction() {\n//  return (\n//    <div className=\"App\">\n//      <header className=\"App-header\">\n//        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//        <p>\n//          Edit <code>src/App.js</code> and save to reload.\n//        </p>\n//        <a\n//          className=\"App-link\"\n//          href=\"https://reactjs.org\"\n//          target=\"_blank\"\n//          rel=\"noopener noreferrer\"\n//        >\n//          Learn React\n//        </a>\n//      </header>\n//    </div>\n//  );\n//}\n\n\nfunction App() {\n  const onDrop = useCallback(acceptedFiles => {// Do something with the files\n    // \n  }, []);\n\n  const _useDropZone = useDropZone({\n    onDrop\n  }),\n        getRootProps = _useDropZone.getRootProps,\n        getInputProps = _useDropZone.getInputProps,\n        isDragActive = _useDropZone.isDragActive;\n\n  return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), isDragActive ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Drop the files here ..\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Drag 'n' drop some files here, or click to select files\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/topaz/projects/dropzone_multi/dropzone-multi/src/App.js"],"names":["React","useCallback","Dropzone","useDropzone","useState","useEffect","Component","DocumentTitleClickStateExample","count","setCount","document","title","ButtonClickStateExample","App","onDrop","acceptedFiles","useDropZone","getRootProps","getInputProps","isDragActive"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAGA,OAAO,WAAP;;AAEA,SAASC,8BAAT,GAA0C;AAAA,oBACfH,QAAQ,CAAC,CAAD,CADO;AAAA;AAAA,QAClCI,KADkC;AAAA,QAC3BC,QAD2B,kBAGzC;AACA;;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACf;AACAK,IAAAA,QAAQ,CAACC,KAAT,yBAAgCH,KAAhC;AACA,GAHQ,CAAT;AAKA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBA,KAAhB,YADA,EAEA;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,CADD;AAQA;;AAED,SAASI,uBAAT,GAAmC;AAClC;AADkC,qBAERR,QAAQ,CAAC,CAAD,CAFA;AAAA;AAAA,QAE3BI,KAF2B;AAAA,QAEpBC,QAFoB;;AAIlC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBD,KAAhB,WADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAQA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASK,GAAT,GAAe;AACd,QAAMC,MAAM,GAAGb,WAAW,CAACc,aAAa,IAAI,CAC3C;AACA;AACA,GAHyB,EAGvB,EAHuB,CAA1B;;AADc,uBAKsCC,WAAW,CAAC;AAACF,IAAAA;AAAD,GAAD,CALjD;AAAA,QAKPG,YALO,gBAKPA,YALO;AAAA,QAKOC,aALP,gBAKOA,aALP;AAAA,QAKsBC,YALtB,gBAKsBA,YALtB;;AAOd,SACC,6CAASF,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAGIC,YAAY,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADc,GAEd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DALF,CADD;AAUA;;AAED,eAAeN,GAAf","sourcesContent":["import React, {useCallback} from 'react';\n\nimport Dropzone from 'react-dropzone'\nimport {useDropzone} from 'react-dropzone'\nimport { useState, useEffect } from 'react';\nimport { Component } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction DocumentTitleClickStateExample() {\n\tconst [count, setCount] = useState(0);\n\n\t// Similar to componentDidMount and componentDidUpdate:\n\t// When you call useEffect, you're telling React to run your \"effect\" function after flushing changes to the DOM.\n\tuseEffect(() => {\n\t\t// Update the document title using the browser API\n\t\tdocument.title = `You clicked ${count} times`;\n\t});\n\n\treturn (\n\t\t<div>\n\t\t<p>You clicked {count} times </p>\n\t\t<button onClick={() => setCount(count + 1)}>\n\t\tClick Me\n\t\t</button>\n\t\t</div>\n\t);\t\n}\n\nfunction ButtonClickStateExample() {\n\t// declare a new state variable, which we'll call 'count'\n\tconst [count, setCount] = useState(0);\n\n\treturn (\n\t  <div>\n\t    <p>You clicked {count} times</p>\t\t\n\t    <button onClick={() => setCount(count + 1)}>\n\t\tClick me\n\t    </button>\n\t  </div>\n\t);\n}\n\n//function DefaultAppFunction() {\n//  return (\n//    <div className=\"App\">\n//      <header className=\"App-header\">\n//        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//        <p>\n//          Edit <code>src/App.js</code> and save to reload.\n//        </p>\n//        <a\n//          className=\"App-link\"\n//          href=\"https://reactjs.org\"\n//          target=\"_blank\"\n//          rel=\"noopener noreferrer\"\n//        >\n//          Learn React\n//        </a>\n//      </header>\n//    </div>\n//  );\n//}\n\nfunction App() {\n\tconst onDrop = useCallback(acceptedFiles => {\n\t\t// Do something with the files\n\t\t// \n\t}, [])\n\tconst {getRootProps, getInputProps, isDragActive} = useDropZone({onDrop})\n\n\treturn (\n\t\t<div {...getRootProps()}>\n\t\t  <input {...getInputProps()} />\n\t\t  {\n\t\t    isDragActive ?\n\t\t\t <p>Drop the files here ..</p> :\n\t\t\t <p>Drag 'n' drop some files here, or click to select files</p>\n\t\t  }\n\t\t</div>\t     \n\t)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}